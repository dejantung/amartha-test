// Code generated by MockGen. DO NOT EDIT.
// Source: billing-engine/internal/billing/repository (interfaces: BillingCacheProvider)
//
// Generated by this command:
//
//	mockgen -destination=../mocks/mock_billing_cache.go -package=mocks billing-engine/internal/billing/repository BillingCacheProvider
//

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	gomock "go.uber.org/mock/gomock"
)

// MockBillingCacheProvider is a mock of BillingCacheProvider interface.
type MockBillingCacheProvider struct {
	ctrl     *gomock.Controller
	recorder *MockBillingCacheProviderMockRecorder
}

// MockBillingCacheProviderMockRecorder is the mock recorder for MockBillingCacheProvider.
type MockBillingCacheProviderMockRecorder struct {
	mock *MockBillingCacheProvider
}

// NewMockBillingCacheProvider creates a new mock instance.
func NewMockBillingCacheProvider(ctrl *gomock.Controller) *MockBillingCacheProvider {
	mock := &MockBillingCacheProvider{ctrl: ctrl}
	mock.recorder = &MockBillingCacheProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockBillingCacheProvider) EXPECT() *MockBillingCacheProviderMockRecorder {
	return m.recorder
}

// Get mocks base method.
func (m *MockBillingCacheProvider) Get(arg0 context.Context, arg1 string) (any, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Get", arg0, arg1)
	ret0, _ := ret[0].(any)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Get indicates an expected call of Get.
func (mr *MockBillingCacheProviderMockRecorder) Get(arg0, arg1 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Get", reflect.TypeOf((*MockBillingCacheProvider)(nil).Get), arg0, arg1)
}

// Set mocks base method.
func (m *MockBillingCacheProvider) Set(arg0 context.Context, arg1 string, arg2 any) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Set", arg0, arg1, arg2)
	ret0, _ := ret[0].(error)
	return ret0
}

// Set indicates an expected call of Set.
func (mr *MockBillingCacheProviderMockRecorder) Set(arg0, arg1, arg2 any) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Set", reflect.TypeOf((*MockBillingCacheProvider)(nil).Set), arg0, arg1, arg2)
}
